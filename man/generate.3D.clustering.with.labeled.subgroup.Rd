% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{generate.3D.clustering.with.labeled.subgroup}
\alias{generate.3D.clustering.with.labeled.subgroup}
\title{Make a 3D scatter plot that shows the data as represented by PC1, PC2, and PC3 and color labels clusters.}
\usage{
generate.3D.clustering.with.labeled.subgroup(
  pca.results.input,
  cluster.labels.input,
  subgroup.labels.input,
  name
)
}
\arguments{
\item{pca.results.input}{An object outputted by stats::prcomp(). The PCA of all the features used for clustering. There should be at least 3 features.}

\item{cluster.labels.input}{A vector of integers that specify which cluster each observation belongs to}

\item{subgroup.labels.input}{A vector of integers that specify an additional label for each observations. Should only have two levels (0 or 1). If observation has value of 1, then it will be circled.}

\item{name}{A string used for the title of the plot.}
}
\value{
No object is returned, but a rgl plot is displayed.
}
\description{
After clustering of a dataset with three or more dimensions, we often want to
visualize the result of the clustering on a 3D plot. If there are more than
three dimensions, we want to first reduce the data down to three dimensions.
This can be done with PCA. After PCA is completed, the data can be plotted
with this function.
}
\details{
This function plots PC1 vs PC2 vs PC3. This function uses
the output of stat::prcomp(). The input into prcomp() needs to have
at least 3 dimensions.
}
\examples{

example.data <- data.frame(x = c(18, 21, 22, 24, 26, 26, 27, 30, 31, 35,
                                 39, 40, 41, 42, 44, 46, 47, 48, 49, 54, 35, 30),
                           y = c(10, 11, 22, 15, 12, 13, 14, 33, 39, 37, 44,
                                 27, 29, 20, 28, 21, 30, 31, 23, 24, 40, 45),
                           z = c(1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3,
                                 3, 3, 3, 3, 3, 3, 3, 3))

dev.new()
plot(example.data$x, example.data$y)

km.res <- stats::kmeans(example.data[,c("x", "y", "z")], 3, nstart = 25, iter.max=10)

grouped <- km.res$cluster

pca.results <- prcomp(example.data[,c("x", "y", "z")], scale=FALSE)

actual.group.label <- c(1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2)

generate.3D.clustering.with.labeled.subgroup(pca.results, grouped, actual.group.label, "Cluster results with actual group label")

}
